{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/markyoung/code/udemy/microservices/ticketing/client/hooks/use-request.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport { useState } from 'react';\n\nvar UseRequest = function UseRequest(_ref) {\n  _s();\n\n  var url = _ref.url,\n      method = _ref.method,\n      body = _ref.body,\n      onSuccess = _ref.onSuccess;\n\n  var _useState = useState(null),\n      errors = _useState[0],\n      setErrors = _useState[1];\n\n  var doRequest = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setErrors(null);\n              _context.next = 4;\n              return axios[method](url, body);\n\n            case 4:\n              response = _context.sent;\n\n              if (onSuccess) {\n                onSuccess(response.data);\n              }\n\n              return _context.abrupt(\"return\", response.data);\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              setErrors(__jsx(\"div\", {\n                className: \"alert alert-danger\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 19,\n                  columnNumber: 9\n                }\n              }, __jsx(\"h4\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 20,\n                  columnNumber: 11\n                }\n              }, \"Oops....\"), __jsx(\"ul\", {\n                className: \"my-0\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 21,\n                  columnNumber: 11\n                }\n              }, _context.t0.response.data.errors.map(function (theErr) {\n                return __jsx(\"li\", {\n                  key: theErr.message,\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 23,\n                    columnNumber: 13\n                  }\n                }, theErr.message);\n              }))));\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function doRequest() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return {\n    doRequest: doRequest,\n    errors: errors\n  };\n};\n\n_s(UseRequest, \"Lil3rI45Rob3OoYDaiS1RnB0avQ=\");\n\n_c = UseRequest;\nexport default UseRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseRequest\");","map":{"version":3,"sources":["/Users/markyoung/code/udemy/microservices/ticketing/client/hooks/use-request.js"],"names":["axios","useState","UseRequest","url","method","body","onSuccess","errors","setErrors","doRequest","response","data","map","theErr","message"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAuC;AAAA;;AAAA,MAApCC,GAAoC,QAApCA,GAAoC;AAAA,MAA/BC,MAA+B,QAA/BA,MAA+B;AAAA,MAAvBC,IAAuB,QAAvBA,IAAuB;AAAA,MAAjBC,SAAiB,QAAjBA,SAAiB;;AAAA,kBAC1BL,QAAQ,CAAC,IAAD,CADkB;AAAA,MAChDM,MADgD;AAAA,MACxCC,SADwC;;AAGxD,MAAMC,SAAS;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEdD,cAAAA,SAAS,CAAC,IAAD,CAAT;AAFc;AAAA,qBAGSR,KAAK,CAACI,MAAD,CAAL,CAAcD,GAAd,EAAmBE,IAAnB,CAHT;;AAAA;AAGRK,cAAAA,QAHQ;;AAKd,kBAAIJ,SAAJ,EAAe;AACbA,gBAAAA,SAAS,CAACI,QAAQ,CAACC,IAAV,CAAT;AACD;;AAPa,+CASPD,QAAQ,CAACC,IATF;;AAAA;AAAA;AAAA;AAWdH,cAAAA,SAAS,CACP;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAI,gBAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACG,YAAIE,QAAJ,CAAaC,IAAb,CAAkBJ,MAAlB,CAAyBK,GAAzB,CAA6B,UAAAC,MAAM;AAAA,uBACpC;AAAI,kBAAA,GAAG,EAAEA,MAAM,CAACC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA0BD,MAAM,CAACC,OAAjC,CADoC;AAAA,eAAnC,CADH,CAFF,CADO,CAAT;;AAXc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATL,SAAS;AAAA;AAAA;AAAA,KAAf;;AAwBA,SAAO;AAAEA,IAAAA,SAAS,EAATA,SAAF;AAAaF,IAAAA,MAAM,EAANA;AAAb,GAAP;AACD,CA5BD;;GAAML,U;;KAAAA,U;AA8BN,eAAeA,UAAf","sourcesContent":["import axios from 'axios';\nimport { useState } from 'react';\n\nconst UseRequest = ({ url, method, body, onSuccess  }) => {\n  const [ errors, setErrors ] = useState(null);\n\n  const doRequest = async () => {\n    try {\n      setErrors(null);\n      const response = await axios[method](url, body);\n\n      if (onSuccess) {\n        onSuccess(response.data);\n      }\n\n      return response.data;\n    } catch (err) {\n      setErrors(\n        <div className=\"alert alert-danger\">\n          <h4>Oops....</h4>\n          <ul className=\"my-0\">\n            {err.response.data.errors.map(theErr => (\n            <li key={theErr.message}>{theErr.message}</li>\n            ))}\n          </ul>\n        </div>\n      )\n    }\n  };\n\n  return { doRequest, errors };\n};\n\nexport default UseRequest;\n"]},"metadata":{},"sourceType":"module"}